# -*- coding: utf-8 -*-
"""Dog vs cat Classification using Transfer Learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-VMN7-4fJg6QJ7QIRLGKBJ4ekMb7xQ3n
"""

!pip install kaggle#configuring the path of kaggle.json file

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

"""Importing the dog vs cat data set"""

#Kaggle api
!kaggle competitions download -c dogs-vs-cats

# extracting the compressed dataset
from zipfile import ZipFile

dataset = '/content/dogs-vs-cats.zip'

with ZipFile(dataset ,'r') as zip:
  zip.extractall()
  print(' the dataset is extracted')

# extracting the compressed dataset
from zipfile import ZipFile

dataset = '/content/train.zip'

with ZipFile(dataset ,'r') as zip:
  zip.extractall()
  print(' the dataset is extracted')

import os
#counting the  number of files in the train folder
paths ,dirs, files =next(os.walk('/content/train'))
file_count =len(files)
print('Number of images :' ,file_count)

"""Printing the Names of the images

"""

file_names =os.listdir('/content/train')
print(file_names)

import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from sklearn.model_selection import train_test_split
from google.colab.patches import cv2_imshow

"""Displaying the images of dogs and cats"""

img = mpimg.imread('/content/train/dog.584.jpg')
imgplt = plt.imshow(img)
plt.show

img = mpimg.imread('/content/train/cat.788.jpg')
imgplt =plt.imshow(img)
plt.show()

file_names =os.listdir('/content/train')

for i in range(5):
  print(file_names[i])

file_names =os.listdir('/content/train')

dog_count = 0;
cat_count = 0;

for img_file in file_names:

  name = img_file[0:3]
  if name == 'dog':
    dog_count += 1
  else:
    cat_count +=1

print ('Number of dog images :', dog_count)
print ('Number of cat images :', cat_count)

"""Resizing the images"""

#creating a new directory
os.mkdir('/content/image resized')

original_folder  = '/content/train/'
resized_folder ='/content/image resized/'

for i in range(2000):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder +filename # concatenating filename and folder

  img  = Image.open(img_path)
  img = img.resize((224,224))
  img  = img.convert('RGB')

  newImgPath =resized_folder+filename
  img.save(newImgPath)

img = mpimg.imread('/content/image resized/cat.11891.jpg')
imgplt =plt.imshow(img)
plt.show

"""Creating labels for resized images of  dogs and cats

cats =0

Dog =1
"""

# creating a for loop to assign all the labels
filenames= os.listdir('/content/image resized/')

labels =[ ]

for i in range(2000):

  file_name =filenames[i]
  label =file_name[0:3] # first 3 letters like dog

  if label == 'dog':
    labels.append(1)

  else:
    labels.append(0)

print(labels[0:5])
print(len(filenames))
print(len(labels))

print(filenames)

#counnting the images of dogs and cats out of 2000 images
values ,counts =np.unique(labels ,return_counts = True)
print(values)
print(counts)

